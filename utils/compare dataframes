{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6405b704-c423-4b1c-b441-9d84a7adb82a",
   "metadata": {
    "tags": []
   },
   "source": [
    "#  Compare Dataframes by key using pandas\n",
    "\n",
    "Compare dataframes by a key:\n",
    "\n",
    "1. \"normalize both dataframe to same shape to compare with the df compare function\n",
    "      - merge dataframe key columns together and indicate where they came from\n",
    "      - concat unique rows from one data frame to the other so the number of rows is the same\n",
    "      - sort based on key\n",
    "1. use data frame compare function to compare rows\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "8ffa9dc8-aca3-4d7c-a2c5-905d39bf970c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(66, 41)"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import itertools \n",
    "\n",
    "'''\n",
    "df1 = pd.DataFrame({'key': ['foo', 'bar','fizz'],\n",
    "                    'value': [1, 2,11]})\n",
    "df2 = pd.DataFrame({'key': ['foo', 'bar', 'baz'],\n",
    "                    'value': [5, 6, 7]})\n",
    "\n",
    "df1 = pd.read_excel(r'test_files/Book1.xlsx')\n",
    "df2 = pd.read_excel(r'test_files/Book2.xlsx')\n",
    "\n",
    "'''\n",
    "\n",
    "df1 = pd.read_csv(r'test_files/StructureDefinition-C4BB-Coverage.csv')\n",
    "df2 = pd.read_csv(r'test_files/StructureDefinition-hrex-coverage.csv')\n",
    "\n",
    "my_key = 'Path'\n",
    "\n",
    "df1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "e43203eb-c1b0-45eb-8ce6-42487fb1d7ce",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(58, 41)"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "34577e58-2be4-4f7b-932c-d836ddb2e6cb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Path</th>\n",
       "      <th>_merge</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Coverage</td>\n",
       "      <td>both</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Coverage.id</td>\n",
       "      <td>both</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Coverage.meta</td>\n",
       "      <td>both</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Coverage.meta.id</td>\n",
       "      <td>left_only</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Coverage.meta.extension</td>\n",
       "      <td>left_only</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>Coverage.identifier.type</td>\n",
       "      <td>right_only</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>Coverage.identifier.system</td>\n",
       "      <td>right_only</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>Coverage.identifier.value</td>\n",
       "      <td>right_only</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>Coverage.identifier.period</td>\n",
       "      <td>right_only</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>Coverage.identifier.assigner</td>\n",
       "      <td>right_only</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>74 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                            Path      _merge\n",
       "0                       Coverage        both\n",
       "1                    Coverage.id        both\n",
       "2                  Coverage.meta        both\n",
       "3               Coverage.meta.id   left_only\n",
       "4        Coverage.meta.extension   left_only\n",
       "..                           ...         ...\n",
       "69      Coverage.identifier.type  right_only\n",
       "70    Coverage.identifier.system  right_only\n",
       "71     Coverage.identifier.value  right_only\n",
       "72    Coverage.identifier.period  right_only\n",
       "73  Coverage.identifier.assigner  right_only\n",
       "\n",
       "[74 rows x 2 columns]"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_all = df1[[my_key]].merge(df2[[my_key]], on=my_key, \n",
    "                   how='outer', indicator=True)\n",
    "df_all"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "637ee753-29ee-4d01-b086-d0fb8f7a97b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(50, 2)"
      ]
     },
     "execution_count": 80,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_all.query('_merge == \"both\"').shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "f7a385a1-c45e-4247-b00e-faccd9080db7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(16, 2)"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "left_only  = df_all.query('_merge == \"left_only\"')\n",
    "left_only.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "bf464a0c-6ec2-4988-92e6-5a9aa6f464c0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(8, 2)"
      ]
     },
     "execution_count": 82,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "right_only  = df_all.query('_merge == \"right_only\"')\n",
    "right_only.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "658d79d7-556c-4f06-9871-79bbb9447d6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(74, 42)"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1_new = pd.concat([df1,right_only], ignore_index=True)\n",
    "df1_new.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "de19ea41-0548-4862-b34e-c614bffbe4c9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Slice Name</th>\n",
       "      <th>Alias(s)</th>\n",
       "      <th>Label</th>\n",
       "      <th>Min</th>\n",
       "      <th>Max</th>\n",
       "      <th>Must Support?</th>\n",
       "      <th>Is Modifier?</th>\n",
       "      <th>Is Summary?</th>\n",
       "      <th>Type(s)</th>\n",
       "      <th>Short</th>\n",
       "      <th>...</th>\n",
       "      <th>Base Max</th>\n",
       "      <th>Condition(s)</th>\n",
       "      <th>Constraint(s)</th>\n",
       "      <th>Mapping: Workflow Pattern</th>\n",
       "      <th>Mapping: RIM Mapping</th>\n",
       "      <th>Mapping: FiveWs Pattern Mapping</th>\n",
       "      <th>Mapping: Canadian Dental Association eclaims standard</th>\n",
       "      <th>Mapping: HL7 v2 Mapping</th>\n",
       "      <th>Mapping: Canadian Pharmacy Associaiton eclaims standard</th>\n",
       "      <th>_merge</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Path</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Coverage</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Insurance or medical plan or a payment agreement</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>dom-2:If the resource is contained in another ...</td>\n",
       "      <td>Event</td>\n",
       "      <td>Entity. Role, or Act</td>\n",
       "      <td>Coverage</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.id</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>string {[]} {[]}\\n</td>\n",
       "      <td>Logical id of this artifact</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.meta</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>Meta {[]} {[]}\\n</td>\n",
       "      <td>Metadata about the resource</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ele-1:All FHIR elements must have a @value or ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.meta.id</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>string {[]} {[]}\\n</td>\n",
       "      <td>Unique id for inter-element referencing</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.meta.extension</th>\n",
       "      <td>NaN</td>\n",
       "      <td>extensions\\nuser content</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Extension {[]} {[]}\\n</td>\n",
       "      <td>Additional content defined by implementations</td>\n",
       "      <td>...</td>\n",
       "      <td>*</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ele-1:All FHIR elements must have a @value or ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Slice Name                  Alias(s)  Label  Min Max  \\\n",
       "Path                                                                           \n",
       "Coverage                       NaN                       NaN    NaN  0.0   *   \n",
       "Coverage.id                    NaN                       NaN    NaN  0.0   1   \n",
       "Coverage.meta                  NaN                       NaN    NaN  1.0   1   \n",
       "Coverage.meta.id               NaN                       NaN    NaN  0.0   1   \n",
       "Coverage.meta.extension        NaN  extensions\\nuser content    NaN  0.0   *   \n",
       "\n",
       "                        Must Support? Is Modifier? Is Summary?  \\\n",
       "Path                                                             \n",
       "Coverage                          NaN          NaN         NaN   \n",
       "Coverage.id                       NaN          NaN           Y   \n",
       "Coverage.meta                       Y          NaN           Y   \n",
       "Coverage.meta.id                  NaN          NaN         NaN   \n",
       "Coverage.meta.extension           NaN          NaN         NaN   \n",
       "\n",
       "                                       Type(s)  \\\n",
       "Path                                             \n",
       "Coverage                                   NaN   \n",
       "Coverage.id                 string {[]} {[]}\\n   \n",
       "Coverage.meta                 Meta {[]} {[]}\\n   \n",
       "Coverage.meta.id            string {[]} {[]}\\n   \n",
       "Coverage.meta.extension  Extension {[]} {[]}\\n   \n",
       "\n",
       "                                                                    Short  \\\n",
       "Path                                                                        \n",
       "Coverage                 Insurance or medical plan or a payment agreement   \n",
       "Coverage.id                                   Logical id of this artifact   \n",
       "Coverage.meta                                 Metadata about the resource   \n",
       "Coverage.meta.id                  Unique id for inter-element referencing   \n",
       "Coverage.meta.extension     Additional content defined by implementations   \n",
       "\n",
       "                         ... Base Max  \\\n",
       "Path                     ...            \n",
       "Coverage                 ...      NaN   \n",
       "Coverage.id              ...      NaN   \n",
       "Coverage.meta            ...      NaN   \n",
       "Coverage.meta.id         ...      NaN   \n",
       "Coverage.meta.extension  ...        *   \n",
       "\n",
       "                                                              Condition(s)  \\\n",
       "Path                                                                         \n",
       "Coverage                 dom-2:If the resource is contained in another ...   \n",
       "Coverage.id                                                            NaN   \n",
       "Coverage.meta            ele-1:All FHIR elements must have a @value or ...   \n",
       "Coverage.meta.id                                                       NaN   \n",
       "Coverage.meta.extension                                                NaN   \n",
       "\n",
       "                                                             Constraint(s)  \\\n",
       "Path                                                                         \n",
       "Coverage                                                             Event   \n",
       "Coverage.id                                                            NaN   \n",
       "Coverage.meta                                                          NaN   \n",
       "Coverage.meta.id                                                       NaN   \n",
       "Coverage.meta.extension  ele-1:All FHIR elements must have a @value or ...   \n",
       "\n",
       "                         Mapping: Workflow Pattern  Mapping: RIM Mapping  \\\n",
       "Path                                                                       \n",
       "Coverage                      Entity. Role, or Act              Coverage   \n",
       "Coverage.id                                    NaN                   NaN   \n",
       "Coverage.meta                                  NaN                   NaN   \n",
       "Coverage.meta.id                               NaN                   NaN   \n",
       "Coverage.meta.extension                        NaN                   NaN   \n",
       "\n",
       "                         Mapping: FiveWs Pattern Mapping  \\\n",
       "Path                                                       \n",
       "Coverage                                             NaN   \n",
       "Coverage.id                                          NaN   \n",
       "Coverage.meta                                        NaN   \n",
       "Coverage.meta.id                                     NaN   \n",
       "Coverage.meta.extension                              NaN   \n",
       "\n",
       "                        Mapping: Canadian Dental Association eclaims standard  \\\n",
       "Path                                                                            \n",
       "Coverage                                                               NaN      \n",
       "Coverage.id                                                            NaN      \n",
       "Coverage.meta                                                          NaN      \n",
       "Coverage.meta.id                                                       NaN      \n",
       "Coverage.meta.extension                                                NaN      \n",
       "\n",
       "                         Mapping: HL7 v2 Mapping  \\\n",
       "Path                                               \n",
       "Coverage                                     NaN   \n",
       "Coverage.id                                  NaN   \n",
       "Coverage.meta                                NaN   \n",
       "Coverage.meta.id                             NaN   \n",
       "Coverage.meta.extension                      NaN   \n",
       "\n",
       "                         Mapping: Canadian Pharmacy Associaiton eclaims standard  \\\n",
       "Path                                                                               \n",
       "Coverage                                                               NaN         \n",
       "Coverage.id                                                            NaN         \n",
       "Coverage.meta                                                          NaN         \n",
       "Coverage.meta.id                                                       NaN         \n",
       "Coverage.meta.extension                                                NaN         \n",
       "\n",
       "                         _merge  \n",
       "Path                             \n",
       "Coverage                    NaN  \n",
       "Coverage.id                 NaN  \n",
       "Coverage.meta               NaN  \n",
       "Coverage.meta.id            NaN  \n",
       "Coverage.meta.extension     NaN  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1_new = df1_new.set_index(my_key)\n",
    "df1_new.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "be3a6448-81f2-4ad0-80a1-95b53db4204a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Slice Name</th>\n",
       "      <th>Alias(s)</th>\n",
       "      <th>Label</th>\n",
       "      <th>Min</th>\n",
       "      <th>Max</th>\n",
       "      <th>Must Support?</th>\n",
       "      <th>Is Modifier?</th>\n",
       "      <th>Is Summary?</th>\n",
       "      <th>Type(s)</th>\n",
       "      <th>Short</th>\n",
       "      <th>...</th>\n",
       "      <th>Base Max</th>\n",
       "      <th>Condition(s)</th>\n",
       "      <th>Constraint(s)</th>\n",
       "      <th>Mapping: Workflow Pattern</th>\n",
       "      <th>Mapping: RIM Mapping</th>\n",
       "      <th>Mapping: FiveWs Pattern Mapping</th>\n",
       "      <th>Mapping: Canadian Dental Association eclaims standard</th>\n",
       "      <th>Mapping: HL7 v2 Mapping</th>\n",
       "      <th>Mapping: Canadian Pharmacy Associaiton eclaims standard</th>\n",
       "      <th>_merge</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Path</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Coverage</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Insurance or medical plan or a payment agreement</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>dom-2:If the resource is contained in another ...</td>\n",
       "      <td>Event</td>\n",
       "      <td>Entity. Role, or Act</td>\n",
       "      <td>Coverage</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.beneficiary</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>Reference {[]} {[CanonicalType[http://hl7.org/...</td>\n",
       "      <td>Plan beneficiary</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ele-1:All FHIR elements must have a @value or ...</td>\n",
       "      <td>Event.subject</td>\n",
       "      <td>FiveWs.subject[x]</td>\n",
       "      <td>FiveWs.subject</td>\n",
       "      <td>D01 through D09</td>\n",
       "      <td>IN1-16, 18,  19-name of insured, address, date...</td>\n",
       "      <td>C.35</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.class</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>BackboneElement {[]} {[]}\\n</td>\n",
       "      <td>Additional coverage classifications</td>\n",
       "      <td>...</td>\n",
       "      <td>*</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ele-1:All FHIR elements must have a @value or ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.class.extension</th>\n",
       "      <td>NaN</td>\n",
       "      <td>extensions\\nuser content</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>*</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Extension {[]} {[]}\\n</td>\n",
       "      <td>Additional content defined by implementations</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>ele-1:All FHIR elements must have a @value or ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.class.id</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>string {[]} {[]}\\n</td>\n",
       "      <td>Unique id for inter-element referencing</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                         Slice Name                  Alias(s)  Label  Min Max  \\\n",
       "Path                                                                            \n",
       "Coverage                        NaN                       NaN    NaN  0.0   *   \n",
       "Coverage.beneficiary            NaN                       NaN    NaN  1.0   1   \n",
       "Coverage.class                  NaN                       NaN    NaN  0.0   *   \n",
       "Coverage.class.extension        NaN  extensions\\nuser content    NaN  0.0   *   \n",
       "Coverage.class.id               NaN                       NaN    NaN  0.0   1   \n",
       "\n",
       "                         Must Support? Is Modifier? Is Summary?  \\\n",
       "Path                                                              \n",
       "Coverage                           NaN          NaN         NaN   \n",
       "Coverage.beneficiary                 Y          NaN           Y   \n",
       "Coverage.class                       Y          NaN         NaN   \n",
       "Coverage.class.extension           NaN          NaN         NaN   \n",
       "Coverage.class.id                  NaN          NaN         NaN   \n",
       "\n",
       "                                                                    Type(s)  \\\n",
       "Path                                                                          \n",
       "Coverage                                                                NaN   \n",
       "Coverage.beneficiary      Reference {[]} {[CanonicalType[http://hl7.org/...   \n",
       "Coverage.class                                  BackboneElement {[]} {[]}\\n   \n",
       "Coverage.class.extension                              Extension {[]} {[]}\\n   \n",
       "Coverage.class.id                                        string {[]} {[]}\\n   \n",
       "\n",
       "                                                                     Short  \\\n",
       "Path                                                                         \n",
       "Coverage                  Insurance or medical plan or a payment agreement   \n",
       "Coverage.beneficiary                                      Plan beneficiary   \n",
       "Coverage.class                         Additional coverage classifications   \n",
       "Coverage.class.extension     Additional content defined by implementations   \n",
       "Coverage.class.id                  Unique id for inter-element referencing   \n",
       "\n",
       "                          ... Base Max  \\\n",
       "Path                      ...            \n",
       "Coverage                  ...      NaN   \n",
       "Coverage.beneficiary      ...      NaN   \n",
       "Coverage.class            ...        *   \n",
       "Coverage.class.extension  ...      NaN   \n",
       "Coverage.class.id         ...      NaN   \n",
       "\n",
       "                                                               Condition(s)  \\\n",
       "Path                                                                          \n",
       "Coverage                  dom-2:If the resource is contained in another ...   \n",
       "Coverage.beneficiary      ele-1:All FHIR elements must have a @value or ...   \n",
       "Coverage.class                                                          NaN   \n",
       "Coverage.class.extension  ele-1:All FHIR elements must have a @value or ...   \n",
       "Coverage.class.id                                                       NaN   \n",
       "\n",
       "                                                              Constraint(s)  \\\n",
       "Path                                                                          \n",
       "Coverage                                                              Event   \n",
       "Coverage.beneficiary                                          Event.subject   \n",
       "Coverage.class            ele-1:All FHIR elements must have a @value or ...   \n",
       "Coverage.class.extension                                                NaN   \n",
       "Coverage.class.id                                                       NaN   \n",
       "\n",
       "                          Mapping: Workflow Pattern  Mapping: RIM Mapping  \\\n",
       "Path                                                                        \n",
       "Coverage                       Entity. Role, or Act              Coverage   \n",
       "Coverage.beneficiary              FiveWs.subject[x]        FiveWs.subject   \n",
       "Coverage.class                                  NaN                   NaN   \n",
       "Coverage.class.extension                        NaN                   NaN   \n",
       "Coverage.class.id                               NaN                   NaN   \n",
       "\n",
       "                          Mapping: FiveWs Pattern Mapping  \\\n",
       "Path                                                        \n",
       "Coverage                                              NaN   \n",
       "Coverage.beneficiary                      D01 through D09   \n",
       "Coverage.class                                        NaN   \n",
       "Coverage.class.extension                              NaN   \n",
       "Coverage.class.id                                     NaN   \n",
       "\n",
       "                         Mapping: Canadian Dental Association eclaims standard  \\\n",
       "Path                                                                             \n",
       "Coverage                                                                NaN      \n",
       "Coverage.beneficiary      IN1-16, 18,  19-name of insured, address, date...      \n",
       "Coverage.class                                                          NaN      \n",
       "Coverage.class.extension                                                NaN      \n",
       "Coverage.class.id                                                       NaN      \n",
       "\n",
       "                          Mapping: HL7 v2 Mapping  \\\n",
       "Path                                                \n",
       "Coverage                                      NaN   \n",
       "Coverage.beneficiary                         C.35   \n",
       "Coverage.class                                NaN   \n",
       "Coverage.class.extension                      NaN   \n",
       "Coverage.class.id                             NaN   \n",
       "\n",
       "                          Mapping: Canadian Pharmacy Associaiton eclaims standard  \\\n",
       "Path                                                                                \n",
       "Coverage                                                                NaN         \n",
       "Coverage.beneficiary                                                    NaN         \n",
       "Coverage.class                                                          NaN         \n",
       "Coverage.class.extension                                                NaN         \n",
       "Coverage.class.id                                                       NaN         \n",
       "\n",
       "                          _merge  \n",
       "Path                              \n",
       "Coverage                     NaN  \n",
       "Coverage.beneficiary         NaN  \n",
       "Coverage.class               NaN  \n",
       "Coverage.class.extension     NaN  \n",
       "Coverage.class.id            NaN  \n",
       "\n",
       "[5 rows x 41 columns]"
      ]
     },
     "execution_count": 85,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1_new = df1_new.sort_index()\n",
    "df1_new.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "570d4e86-1268-40e2-857b-d01784a9f011",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(74, 41)"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df2_new = pd.concat([df2,left_only], ignore_index=True)\n",
    "df2_new = df2_new.set_index(my_key)\n",
    "df2_new = df2_new.sort_index()\n",
    "df2_new.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "3f309866-c32b-4daa-a74c-f89c8ff35985",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"2\" halign=\"left\">Slice Name</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Alias(s)</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Min</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Max</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Must Support?</th>\n",
       "      <th>...</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Condition(s)</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Constraint(s)</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Mapping: Workflow Pattern</th>\n",
       "      <th colspan=\"2\" halign=\"left\">Mapping: RIM Mapping</th>\n",
       "      <th colspan=\"2\" halign=\"left\">_merge</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>...</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "      <th>self</th>\n",
       "      <th>other</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Path</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Coverage</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>dom-2:If the resource is contained in another ...</td>\n",
       "      <td>dom-2:If the resource is contained in another ...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.beneficiary</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.class</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.class[group]</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Coverage.class[group].name</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Y</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 56 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                           Slice Name       Alias(s)        Min        Max  \\\n",
       "                                 self other     self other self other self   \n",
       "Path                                                                         \n",
       "Coverage                          NaN   NaN      NaN   NaN  NaN   NaN  NaN   \n",
       "Coverage.beneficiary              NaN   NaN      NaN   NaN  NaN   NaN  NaN   \n",
       "Coverage.class                    NaN   NaN      NaN   NaN  NaN   NaN  NaN   \n",
       "Coverage.class[group]             NaN   NaN      NaN   NaN  NaN   NaN  NaN   \n",
       "Coverage.class[group].name        NaN   NaN      NaN   NaN  NaN   NaN  NaN   \n",
       "\n",
       "                                 Must Support?        ...  \\\n",
       "                           other          self other  ...   \n",
       "Path                                                  ...   \n",
       "Coverage                     NaN           NaN   NaN  ...   \n",
       "Coverage.beneficiary         NaN           NaN   NaN  ...   \n",
       "Coverage.class               NaN             Y   NaN  ...   \n",
       "Coverage.class[group]        NaN           NaN   NaN  ...   \n",
       "Coverage.class[group].name   NaN             Y   NaN  ...   \n",
       "\n",
       "                                                                 Condition(s)  \\\n",
       "                                                                         self   \n",
       "Path                                                                            \n",
       "Coverage                    dom-2:If the resource is contained in another ...   \n",
       "Coverage.beneficiary                                                      NaN   \n",
       "Coverage.class                                                            NaN   \n",
       "Coverage.class[group]                                                     NaN   \n",
       "Coverage.class[group].name                                                NaN   \n",
       "\n",
       "                                                                               \\\n",
       "                                                                        other   \n",
       "Path                                                                            \n",
       "Coverage                    dom-2:If the resource is contained in another ...   \n",
       "Coverage.beneficiary                                                      NaN   \n",
       "Coverage.class                                                            NaN   \n",
       "Coverage.class[group]                                                     NaN   \n",
       "Coverage.class[group].name                                                NaN   \n",
       "\n",
       "                           Constraint(s)       Mapping: Workflow Pattern  \\\n",
       "                                    self other                      self   \n",
       "Path                                                                       \n",
       "Coverage                             NaN   NaN                       NaN   \n",
       "Coverage.beneficiary                 NaN   NaN                       NaN   \n",
       "Coverage.class                       NaN   NaN                       NaN   \n",
       "Coverage.class[group]                NaN   NaN                       NaN   \n",
       "Coverage.class[group].name           NaN   NaN                       NaN   \n",
       "\n",
       "                                 Mapping: RIM Mapping       _merge        \n",
       "                           other                 self other   self other  \n",
       "Path                                                                      \n",
       "Coverage                     NaN                  NaN   NaN    NaN   NaN  \n",
       "Coverage.beneficiary         NaN                  NaN   NaN    NaN   NaN  \n",
       "Coverage.class               NaN                  NaN   NaN    NaN   NaN  \n",
       "Coverage.class[group]        NaN                  NaN   NaN    NaN   NaN  \n",
       "Coverage.class[group].name   NaN                  NaN   NaN    NaN   NaN  \n",
       "\n",
       "[5 rows x 56 columns]"
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_compare = df1_new.compare(df2_new, align_axis = 1)\n",
    "df_compare.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "22b8a150-52e2-4d70-915c-cc63315ce3d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "df_compare.to_excel(r\"test_files/Coverage_Compare.xlsx\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "venv39",
   "language": "python",
   "name": "venv39"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
